# -*- coding: utf-8 -*-
"""clever_movie_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ax8-kXb2UDnsMMJ9hYdgZUZ2xDBC_Er3

Использую уже готовый датасет с фильмами и отзывами на них.
"""

import numpy as np
import pandas as pd
import os #для работы с файлами

"""Есть текстовые файлы с отзывами на фильмы. Первая цифра в названии файла - это id фильма с сайта Кинопоиск, вторая - номер отзыва на фильм. Нужно сделать датасет в виде таблицы где в одной колонке указан id фильма, а в другой рецензия на него.
**Проблема**:
в этом датасете нет другой информации, например, названия фильма, года выпуска, ссылки на фильм и т.д.
Но в целом эта информация особо и не нужна, если бот просто будет брать самый подходящий id и выдавать пользователю ссылку на сайт кинопоиска.
"""

# Тут происходит составление датафрейма: название файла|содержимое файла|сентимент
path = '/content/drive/MyDrive/dataset_kinopoisk' #ссылка на гугл-диск
df = pd.DataFrame(columns=['id1','review','sentiment']) # подготовка таблички
prop = 0.005 # часть, которую использую
for directory in os.listdir(path): # перебираем все папки из датасета (нейтральные, позитивные, негативные отзывы)
    if os.path.isdir(path +'/'+ directory): # если это папка
        dirs = np.array(os.listdir(path + '/'+ directory)) # создаем массив названий файлов
        np.random.shuffle(dirs) # перемешиваем порядок файликов
        rews_fhs = np.random.choice(dirs, round(len(dirs) * prop)) # выбор рандомных prop процентов с округлением

        # то есть сейчас есть массив из 20к названий файлов. Мы выбрали % файлов

for rew_fh in rews_fhs: # для каждого файла из выбранных
            a = os.path.splitext(rew_fh)[0]
            with open(os.path.join(path + '/'+ directory + '/', rew_fh), encoding='utf-8') as f: # тут оператор with открывает и автоматически закрывает файл по выходу из блока
                review = f.read() # записываем в переменную текст с отзывом
                current_df = pd.DataFrame({'id1':[a],'review': [review], 'sentiment': directory}) # запись в dataframe
                df = df.append(current_df, ignore_index=True) # добавляем построчно в датафрейм каждый файл

df = df.sample(frac=1).reset_index(drop=True) # перемешивание строк

df.tail(5)

new_df = df['id1'].str.split('-',expand=True)
new_df.columns=['id','comment_number']
final_df = pd.concat([new_df, df],axis=1).drop('id1', axis=1)

final_df.tail(5)

data_types_dict = {'id': int}
final_df=final_df.astype(data_types_dict)
final_df.sort_values(by='id',ascending=True)