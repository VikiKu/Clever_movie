# -*- coding: utf-8 -*-
"""make_df.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ia-hG7RAw9JA__iZjKsVCmTlG8oRzaSd
"""

!pip install pyyaml==5.4.1 # поддерживает стандартные теги YAML
!pip install transformers # содержит уже готовые архитектуры

import zipfile #для работы с архивами
import os #для работы с файловой системой
import numpy as np
import pandas as pd

from google.colab import drive #для работы с гугл диском

#подключение гугл диска
drive.mount('/content/drive')

"""Распаковка архива, лежащего на гугл диске, который содержит 3 папки(отрицательные, положительные, нейтральные)с отзывами. Название каждого файла состоит из 2х чисел(через дефис): первая обозначает id фильма, вторая - номер комментария. Данный набор данных взять на Kaggle.

"""

zip_file='/content/drive/MyDrive/archive.zip'
#распаковка архива
z = zipfile.ZipFile(zip_file, 'r')
z.extractall()
#просмотр списка папок  print(os.listdir())
# выбор папки
path = 'dataset'

path = 'dataset'
df1 = pd.DataFrame(columns=['id1','review','sentiment']) # подготовка таблицы, id1 это названия файлов
prop = 1 # часть файлов, которую использую

for directory in os.listdir(path): # перебираем все папки из датасета (нейтральные, позитивные, негативные отзывы)
    if os.path.isdir(path+'/'+ directory): # если это папка
        dirs = np.array(os.listdir(path+ '/'+ directory)) # создаем массив названий файлов
        np.random.shuffle(dirs) # перемешиваем порядок файликов
        rews_fhs = np.random.choice(dirs, round(len(dirs) * prop)) # выбор рандомных prop процентов с округлением

        for rew_fh in rews_fhs: # для каждого файла из выбранных
            a = os.path.splitext(rew_fh)[0]
            with open(os.path.join('dataset' + '/'+ directory + '/', rew_fh), encoding='utf-8') as f: # тут оператор with открывает и автоматически закрывает файл по выходу из блока
                review = f.read() # записываем в переменную текст с отзывом
                current_df = pd.DataFrame({'id1':[a],'review': [review], 'sentiment': directory}) # запись в dataframe
                df1 = df1.append(current_df, ignore_index=True) # добавляем построчно в датафрейм каждый файл

df1 = df1.sample(frac=1).reset_index(drop=True) # перемешивание строк
new_df = df1['id1'].str.split('-',expand=True)
new_df.columns=['id','comment_number']
final_df = pd.concat([new_df, df1],axis=1).drop('id1', axis=1)
data_types_dict = {'id': int}
final_df=final_df.astype(data_types_dict)
final_df.sort_values(by='id',ascending=True, ignore_index=True) # сортировка по возрастанию id
final_df.drop(['comment_number', 'sentiment'],axis= 1 , inplace= True )

final_df # сохраняем его
final_df.to_csv('final_df1.csv')
!cp final_df1.csv "drive/My Drive/"